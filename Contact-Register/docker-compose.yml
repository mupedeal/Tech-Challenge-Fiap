version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: src/ContactRegister.Api/Dockerfile
    ports:
      - '${APP_PORT:-8080}:${APP_INTERNAL_PORT:-8080}'
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;User Id=sa;Password=Password123;TrustServerCertificate=True;
      - ASPNETCORE_HTTP_PORTS=${APP_INTERNAL_PORT:-8080}
      - DOTNET_METRICS_EXPORTER=prometheus 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_INTERNAL_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-CU17-ubuntu-22.04
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Password123
    ports:
      - '${DB_PORT:-1433}:1433'
    volumes:
      - sqlserverdata:/var/opt/mssql
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Password123 -Q 'SELECT 1'",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqlserverdata:
  grafana-data:
