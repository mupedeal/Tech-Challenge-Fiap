services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-CU17-ubuntu-22.04
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Password@1234
    ports:
      - '${DB_PORT:-1433}:1433'
    volumes:
      - sqlserverdata:/var/opt/mssql
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "/opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P Password@1234 -N -C -Q 'SELECT 1'",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  read-contact-api:
    build:
      context: .
      dockerfile: src/ContactRegister.Api.ReadContact/Dockerfile
    ports:
      - '${APP_PORT_READ_CONTACT:-8081}:${APP_INTERNAL_PORT:-8080}'
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;User Id=sa;Password=Password@1234;TrustServerCertificate=True;
      - ASPNETCORE_HTTP_PORTS=${APP_INTERNAL_PORT:-8080}
      - DOTNET_METRICS_EXPORTER=prometheus 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://read-contact-api:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  write-contact-api:
    build:
      context: .
      dockerfile: src/ContactRegister.Api.WriteContact/Dockerfile
    ports:
      - '${APP_PORT_WRITE_CONTACT:-8082}:${APP_INTERNAL_PORT:-8080}'
    depends_on:
      sqlserver:
        condition: service_healthy
      read-contact-api:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;User Id=sa;Password=Password@1234;TrustServerCertificate=True;
      - ASPNETCORE_HTTP_PORTS=${APP_INTERNAL_PORT:-8080}
      - DOTNET_METRICS_EXPORTER=prometheus 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://write-contact-api:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    build:
      context: .
      dockerfile: Dockerfile.prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    depends_on:
      read-contact-api:
        condition: service_healthy
      write-contact-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://prometheus:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    build:
      context: .
      dockerfile: Dockerfile.grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://grafana:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  sqlserverdata:
  grafana-data:
